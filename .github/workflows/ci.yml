on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
  schedule:
    - cron: '23 14 * * 2'
  release:

name: build

jobs:
  lint:
    name: "Run hlint"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up HLint
      uses: haskell-actions/hlint-setup@v2

    - name: Run HLint
      uses: haskell-actions/hlint-run@v2
      with:
        fail-on: warning

  fourmolu:
    name: "Run fourmolu"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: haskell-actions/run-fourmolu@v9
      with:
        version: "0.11.0.0"

  generateMatrix:
    name: "Generate matrix from cabal"
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout base repo
        uses: actions/checkout@v4
      - name: Extract the tested GHC versions
        id: set-matrix
        run: |
          wget https://github.com/Kleidukos/get-tested/releases/download/v0.1.5.0/get-tested-0.1.5.0-linux-amd64 -O get-tested
          chmod +x get-tested
          ./get-tested --ubuntu rhine-koans.cabal >> $GITHUB_OUTPUT

  build-cabal:
    runs-on: ubuntu-latest
    needs: generateMatrix
    strategy:
      matrix: ${{ fromJSON(needs.generateMatrix.outputs.matrix) }}
    name: Haskell GHC ${{ matrix.ghc }} cabal
    steps:
      - uses: actions/checkout@v4
      - uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: ${{ matrix.ghc }}

      - name: Configure & plan
        run: |
          cabal configure --enable-tests --enable-benchmarks --disable-documentation
          cabal build all --dry-run
        # The last step generates dist-newstyle/cache/plan.json for the cache key.

      - name: Restore Cabal cache
        uses: actions/cache/restore@v3
        id: cache
        env:
          key: ${{ runner.os }}-ghc-${{ matrix.ghc }}-cabal-${{ steps.setup.outputs.cabal-version }}
        with:
          path: |
            ${{ steps.setup.outputs.cabal-store }}
            dist-newstyle
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}

      - name: Cabal build dependencies
        run: cabal build all --enable-tests --only-dependencies

      - name: Save Cabal dependency cache
        uses: actions/cache/save@v3
        if: ${{ steps.cache.outputs.cache-primary-key != steps.cache.outputs.cache-matched-key }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - name: Check whether solution branch only contains diffs in the Koans
        run: |
          git fetch origin solution
          git diff origin/solution --exit-code  -- ':(exclude)koans/**/Koan.hs'

      - name: Check out solution branch
        uses: actions/checkout@v4
        with:
          ref: solution

      - name: Cabal build solutions
        run: cabal build all --enable-tests -fdev

      - name: Cabal test solutions
        run: cabal test all --enable-tests --test-show-details=Always

  success:
    name: All GHCs built successfully
    runs-on: ubuntu-latest
    needs: build-cabal
    steps:
      - name: Success
        run: echo "Success"
